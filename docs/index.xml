<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sigstore</title>
    <link>/</link>
    <description>Recent content on sigstore</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Mar 2021 17:09:20 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Privacy Policy</title>
      <link>/legal/privacy_policy/</link>
      <pubDate>Sun, 28 Mar 2021 17:09:20 +0000</pubDate>
      
      <guid>/legal/privacy_policy/</guid>
      <description>Effective: March 28, 2021
Introduction sigstore is an individual series of LF Projects, LLC and as such is subject to the privacy policy published at https://lfprojects.org/policies/privacy-policy/. Those terms are repeated here for convenience.
 The purposes of LF Projects, LLC (“LF Projects”) are to:
 support the collaborative development, availability and adoption of open source software, hardware and networking and other technologies and the collaborative development, availability and adoption of open protocols and standards (individually and collectively, “Open Technology”); host various projects pursuing the development of Open Technology and other technical assets, materials and processes (each such project, which itself may include any number of projects, a “Project”); provide enablement and support to Projects to assist their development activities; and undertake such other lawful activity as permitted by law and as consistent with the mission, purpose and tax status of LFP, Inc.</description>
    </item>
    
    <item>
      <title>Terms of Use</title>
      <link>/legal/terms_of_use/</link>
      <pubDate>Sun, 28 Mar 2021 17:09:20 +0000</pubDate>
      
      <guid>/legal/terms_of_use/</guid>
      <description>Effective: March 28, 2021
Introduction sigstore is an individual series of LF Projects, LLC and as such is subject to the terms and conditions published at https://lfprojects.org/policies/terms-of-use/. Those terms are repeated here for convenience.
 By using any site of the sigstore project, you are agreeing to be bound by the following terms and conditions here.
Users cannot:
 violate anyone’s intellectual property and post anyone else’s copyrighted or confidential material you don’t have permission to use.</description>
    </item>
    
    <item>
      <title>Rekor Directory</title>
      <link>/rekor_directory/</link>
      <pubDate>Tue, 12 Jan 2021 13:46:19 +0000</pubDate>
      
      <guid>/rekor_directory/</guid>
      <description>A list of current public instances of rekor
   Server Purpose     https://rekor.dev/api/v1/log Sandbox     Note: servers listed as &amp;lsquo;Sandbox&amp;rsquo; do not guarantee data persistence at presence. Only production systems provide those guarantees  </description>
    </item>
    
    <item>
      <title>Plugable Types</title>
      <link>/docs/plugable_types/</link>
      <pubDate>Fri, 11 Dec 2020 12:07:22 +0000</pubDate>
      
      <guid>/docs/plugable_types/</guid>
      <description>Description Rekor supports pluggable types (aka different schemas) for entries stored in the transparency log. This will allow you to develop your own manifest type in your preferred formatting style (json|yaml|xml).
Currently supported types  Rekord (default type) schema  Versions: 0.0.1    Base Schema The base schema for all types is modeled off of the schema used by Kubernetes and can be found in openapi.yaml as #/definitions/ProposedEntry:</description>
    </item>
    
    <item>
      <title>Rekor API Client Example</title>
      <link>/docs/api_example/</link>
      <pubDate>Fri, 11 Dec 2020 10:09:51 +0000</pubDate>
      
      <guid>/docs/api_example/</guid>
      <description>We use the OpenAPI specification in rekor making it easy to create your own RestFul API client.
If you&amp;rsquo;re interested in developing an application that can store or retrieve entries into a Rekor transparency log, we recommend you take a look at the swagger online editor.</description>
    </item>
    
    <item>
      <title>Run a Rekor Server</title>
      <link>/get_started/server/</link>
      <pubDate>Tue, 08 Dec 2020 08:12:58 +0000</pubDate>
      
      <guid>/get_started/server/</guid>
      <description>There are a few ways to deploy a Rekor Server:
 We have a docker-compose file available A kubernetes operator Or you could do this manually and build rekor yourself.  Manual Installation Prerequisites You will of course also need golang version 1.15 or greater and a $GOPATH set.
If you want to perform fast queries you will need to add redis, otherwise you must pass the --enable_retrieve_api=false flag when running rekor-server in the later steps of this page.</description>
    </item>
    
    <item>
      <title>Rekor Command Line Interface</title>
      <link>/get_started/client/</link>
      <pubDate>Tue, 08 Dec 2020 08:06:07 +0000</pubDate>
      
      <guid>/get_started/client/</guid>
      <description>The following guide is targeted towards developers / software maintainers who would like to make a provenance entry into the rekor transparency log.
The steps outlined below will show how to sign your software and then use the rekor CLI to make and verify an entry.
Download the Rekor CLI application Prerequisites You will of course also need golang version 1.15 or greater and a $GOPATH set.
Build rekor go get -u -t -v github.</description>
    </item>
    
    <item>
      <title>Frequently Asked Questions</title>
      <link>/faq/</link>
      <pubDate>Mon, 07 Dec 2020 17:09:20 +0000</pubDate>
      
      <guid>/faq/</guid>
      <description>Seems like Rekor is centralised?  Yes, why not? There is no need for a distributed source of transparency. There can be multiple points of transparency which only adds more sources of security guarantee, not less. An entity can post to as many Rekor’s as they want and inform users of where they post. We do encourage folks to use common public instances, but we don&amp;rsquo;t seek to enforce this. We do plan to look to produce a gossip protocol, for those that desire a more decentralised model (if the demand is shown).</description>
    </item>
    
    <item>
      <title>sigstore</title>
      <link>/what_is_sigstore/</link>
      <pubDate>Mon, 07 Dec 2020 17:09:20 +0000</pubDate>
      
      <guid>/what_is_sigstore/</guid>
      <description>sigstore is a Linux Foundation project.
sigstore is a project with the goal of providing a public good / non-profit service to improve the open source software supply chain by easing the adoption of cryptographic software signing, backed by transparency log technologies.
sigstore will seek to empower software developers to securely sign software artifacts such as release files, container images, binaries, bill of material manifests and more. Signing materials are then stored into a tamper resistant public log</description>
    </item>
    
  </channel>
</rss>
